/*
    --- List of Contents ---
    # General Styling
    # Card Styling
    # Credits Styling (footer)
    # Nav Styling (header)

*/

/*
    -------------------------
    --- # General Styling ---
    -------------------------
    ToDo:
        - Fix comments on #General Styling
        - make ".headline" for general headlines and replace index.html
        - make ".list" for general list and replace index.html
        -- have a general version that takes it's children and makes it rows
        -- same for column, just point out that normal is columned. But have it be generally made, so it uses child node.
        - make ".centered" for general centered text and such and replace index.html
*/
/* Variables */
:root {
    /* Color Palette */
    --primary-color: #F6F3ED;
    --primary-contrast-color: #090c12;
    --secondary-color: #E90D2C;
    --secondary-constrast-color: #16f2d3;

}
/* Basic reset for consistent styling */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
@font-face {
    font-family: 'Outfit';
    src: url('../media/Outfit.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}
h1,h2,h3,h4,h5,h6 {
    font-family: 'Outfit', sans-serif;
}
body { /* <body> Tag Styling */
    background-color: var(--primary-color);
}
main { /* <main> Tag Styling */
    line-height: 1.5;
}
a { /* <a> Tag Styling */
    text-decoration: none;
    color: var(--secondary-color);
    font-weight: bold;
    transition: color 0.2s ease;
}
a:hover, a:active { /* <a> Tag Styling On Click And Hover*/
    color: var(--secondary-constrast-color);
    text-decoration: underline;
}
/* grid */
.grid {
    margin-top: 2%;
    margin-left: 15%;
    margin-right: 15%;
    margin-bottom: 5%;
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* Creates 3 equal columns */
    grid-gap: 10px;
}
.grid-item {
    padding: 10px;
    border: 1px solid var(--primary-contrast-color);
}
.grid-item2 {
    padding: 10px;
    border: 1px solid var(--primary-contrast-color);
    grid-column: span 2;
}
.grid-item3 {
    padding: 10px;
    border: 1px solid var(--primary-contrast-color);
    grid-column: span 3;
}
/* Media Query for Narrow Viewports (Mobile Portrait) */
@media (max-width: 600px) {
    .grid {
        margin: 10px;
        grid-template-columns: 1fr;
    }
    .grid-item2,
    .grid-item3 {
        grid-column: span 1;
    }
}
/* Media Query for Wide Viewports (16:9) */
@media (min-width: 601px) and (max-width: 1200px) {
    .grid {
        grid-template-columns: 2fr;
    }
    .grid-item2,
    .grid-item3 {
        grid-column: span 1;
    }
}
/* Media Query for Ultrawide Viewports (21:9) */
@media (min-width: 1201px) {
    .grid {
        grid-template-columns: repeat(3, 1fr);
    }
    .grid-item2 {
        grid-column: span 2;
    }
    .grid-item3 {
        grid-column: span 3;
    }
}

/*
    ----------------------
    --- # Card Styling ---
    ----------------------
*/
/*
    Serves as the main container for the card element.
    It uses flex layout, enabling easy alignment and distribution of child elements.
    The border and border-radius properties give it a defined look with rounded corners.
    overflow: hidden prevents any child elements from extending beyond the card's boundaries, while margin: 20px provides spacing around the card.

*/
.card {
    position: relative;
    display: flex;
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    margin: 20px;
    background-color: white;
    max-width: 100%;
}
/*
    Class acts as a flex container for the image and caption, aligning its children in a horizontal row.
*/
.card-figure {
    display: flex;
}
/*
    Defines a fixed width for the image, maintaining consistency across cards.
    The min-height ensures that the height accommodates the image and additional spacing for "pinning" and "extending",
    while height: auto allows for the container to extend alongside the text.
*/
.card-figure-image {
    width: 150px;
    min-height: calc(150px + 24px * 3); /* Image height + extend height*/
    height: auto;
    background-color: var(--primary-color);
}
/*
    Targets the specific image within the card figure.
    It sets a fixed width and height, ensuring that the image remains contained within its designated space.
    The object-fit: cover property allows the image to fill the area while preserving its aspect ratio,
    cropping as necessary to prevent distortion.
*/
.card-figure-image #fig-img {
    width: 150px;
    height: 150px;
    object-fit: cover;
}
/*
    Caption for the card is styled with padding to provide space around the text.
    The flex-grow: 1 property allows it to expand and fill any available space in the flex container.
    The overflow: hidden property is used to clip any overflowing text,
    while max-height is calculated to show only a limited number of lines before truncation occurs.
*/
.card-figure-caption {
    padding: 20px;
    flex-grow: 1; /* Allow caption to take remaining space */
    overflow: hidden;
    max-height: calc(4.5em * 2); /* Limit height to show approximately 3 lines */
    position: relative;
    text-overflow: ellipsis; /* Show ellipsis for overflowing text */
    display: -webkit-box; /* Required for line clamping */
    -webkit-box-orient: vertical; /* Required for line clamping */
    -webkit-line-clamp: calc(3 * 2); /* Show up to 3 lines before truncation */
    transition: max-height 0.5s ease-in-out;
}
/*
    On hover, the caption expands to reveal the full content, with the max-height set to 100%,
    which effectively removes the height restriction.
    The use of overflow: hidden prevents a scrollbar from appearing, while -webkit-line-clamp: unset removes the line limit,
    allowing the full text to be visible.
*/
.card-figure-caption:hover,
.card-figure-expand:hover ~ .card-figure-caption,
#toggle-expand:checked ~ .card-figure-caption{
    max-height: 100%;
    overflow: hidden;
    -webkit-line-clamp: unset;
}
/*
    The toggle element is a checkbox that controls the expansion of the caption. It has no default appearance, making it customizable.
    When the checkbox is checked, the background color changes to the secondary color.

*/
#toggle-expand {
    appearance: none;
    -webkit-appearance: none; /* For Safari */
    -moz-appearance: none; /* For Firefox */
    background-color: var(--primary-color);
    border-right: 2px solid var(--primary-contrast-color);
    transition: background-color 0.5s ease-in-out, border-color 0.5s ease-in-out;
    pointer-events: none;

}
#toggle-expand:before {
    content: "";
    display: inline-block;
    width: 16px;
    height: 100%;
}
#toggle-expand:checked {
    background-color: var(--secondary-color);
}
/*
     Positions the expand button relative to the card.
     Using absolute positioning, it places the button directly below the image, centered horizontally.
*/
.card-figure-expand {
    position: absolute;
    top: calc(150px); /*Image height*/
    left: calc((150px - 24px * 3) /2); /*image width minus expand width divided by 2 to center position relative to image above it*/
    width: calc(24px * 3);
    height: calc(24px * 3);
}
/*
    Both images serve as icons for expanding or interacting with the card.
    They are absolutely positioned to fill their container completely

*/
#fig-expand, #fig-expand-hover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* object-fit: cover; */
    transition: opacity 0.3s ease;
    cursor: pointer;
}
/*
    When hovering over the expand button hover, it emphasizes that it is clickable.
    Uses ::before pseudo class as part of wrapper (can't be used directly on img) to rotate image without anything else being effected.

    ToDo:
        - remove artifact/fragment code
*/
.fig-expand-hover-wrapper::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("../media/weirdcircle.png") center no-repeat;
    background-size: contain;  /* Adjust size of the image */
    animation: rotateBackground 5s linear infinite;
}
#toggle-expand:checked + .toggle-label .fig-expand-hover-wrapper::before,
.fig-expand-hover-wrapper:hover::before {
    background: none;
}

@keyframes rotateBackground {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
#fig-expand-hover {
    /* transition: border 0.3s ease-in; /**/
    /* background:
            linear-gradient(165deg, rgba(233,13,44,0.5) 20%, rgba(9,12,18,1) 40%, rgba(246,243,237,0.8) 60%, rgba(22,242,211,0.4) 70%),
            url("../media/dirt.jpg"),
            url("../media/weirdcircle.png"); /**/
}
#fig-expand-hover:hover {
    /* border: 5px solid black; /**/
    /* border-radius: 15px; /**/

}
#fig-expand-hover::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5); /* Example overlay color */
    mix-blend-mode: multiply; /* Ensures the color only affects non-transparent areas */
    z-index: 1;  /* Ensures the overlay appears above the background */
}
/*
    When hovering over the expand button or when the checkbox is checked,
    the opacity of the normal expand icon (#fig-expand) is set to 0,
    while the hover icon (#fig-expand-hover) becomes fully opaque.
*/
#fig-expand-hover,
.card-figure-expand:hover #fig-expand,
#toggle-expand:checked + .toggle-label #fig-expand{
    opacity: 0;
}
#fig-expand,
.card-figure-expand:hover #fig-expand-hover,
#toggle-expand:checked + .toggle-label #fig-expand-hover{
    opacity: 1;
}
#toggle-expand:checked + .toggle-label #fig-expand-hover{
    filter: brightness(0) saturate(100%);
}
/*
    Text inside of caption.
*/
.card-figure-caption p {
    margin: 0;
}
/*
    Refrence/source link of caption.
*/
.card-figure-caption-link {
    display: flex;
    justify-content: end;
    align-items: center;
    margin-top: 24px;
    margin-right: 24px;
    color: var(--secondary-color); /* For dash */
    font-size: 24px; /* For dash */
    font-weight: bold; /* For dash */
}
.card-figure-caption-link a {
    font-size: 24px;
}
.card-figure-caption-link span {
    position: relative;
}
.card-figure-caption-link span img {
    position: absolute;
    bottom: 50%;
    left: 50%;
    width: 24px;
    height: 24px;
}
.card-figure-caption-link:hover span img {
    filter: brightness(0) saturate(100%);
}
.card-figure-caption-link:hover {
    color: var(--primary-contrast-color); /* For dash */
}




/*
    ---------------------
    - # Credits Styling -
    ---------------------
    ToDo:
        - Fix comments on #Credits Styling
        - Fix proper img sizing and coloring.
.square:is(:hover, :focus) {
  transform: scale(1.5) rotate(135deg);
}
*/

.footer {

}
.credit-links {
    position: fixed;
    right: 0;
    top: 50%;
    transform: translatey(-50%);
    padding: 1em 0.5em 1em 1em;
    background: var(--primary-color);
    border-radius: 0.5em 0 0 0.5em;
    box-shadow: -4px 0px 0px var(--secondary-constrast-color);
    transition: all 300ms ease;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.credit-links:hover {
    box-shadow: -8px 0px 20px var(--secondary-constrast-color);
    padding: 1em;
}
.credit-header {
    color: var(--primary-contrast-color);
}
.footer-link {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 5px;
}
.footer-link a {
    color: var(--primary-contrast-color);
    font-size: 1.5rem;
    transition: all 200ms ease;
    width: 24px;
    height: 24px;
}
.footer-link a:hover {
    color: var(--secondary-constrast-color);
    font-size: 1.75rem;
}
.footer-link a img {
    width: 100%;
    height: 100%;
}
.credit-face {
    width: 24px;
    height: 24px;
    overflow: hidden;
    border-radius: 50%;
}
.credit-face img{
    width: 100%;
    height: 100%;
}


/*
    ToDo:
        - do not forget download of exam paper as a button/option
        -- change to the sidebar
        - change the top button be for banner that comes out
*/
.footer-gadgets {
    position: fixed;
    left: 50%;
    bottom: 0;
    transform: translatex(-50%);
    padding: 1em 1em 0.5em 1em;
    background: var(--primary-color);
    border-radius: 0.5em 0.5em 0 0;
    box-shadow: 0px -4px 0px var(--secondary-color);
    transition: all 300ms ease;
    display: flex;
    flex-direction: column;
    align-items: center;
}
.footer-gadgets:hover {
    box-shadow: 0px -8px 20px var(--secondary-color);
    padding: 1em;
}
.gadget-header {
    color: var(--primary-contrast-color);
}
.gadget-items {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 5px;
}
.gadget-link {
    list-style: none;
    gap: 1rem;
    padding: 5px;
    padding-bottom: 0;
    color: var(--secondary-color); /* For dash */
    font-size: 24px; /* For dash */
    font-weight: bold; /* For dash */
}
.gadget-link a {
    color: var(--secondary-color);
    font-size: 24px;
    transition: all 200ms ease;
}
.gadget-link a:hover {
    color: var(--secondary-constrast-color);
}
.gadget-link span {
    position: relative;
}
.gadget-link span img {
    position: absolute;
    bottom: 50%;
    left: 50%;
    width: 24px;
    height: 24px;
}
.gadget-link a span img {
    width: 16px;
    height: 16px;
    filter: invert(17%) sepia(73%) saturate(7448%) hue-rotate(346deg) brightness(92%) contrast(99%);
}
.gadget-link a:hover span img {
    filter: none;
}
.gadget-link:hover {
    color: var(--primary-contrast-color); /* For dash */
}


/*
    ---------------------
    --- # Nav Styling ---
    ---------------------
*/
/*
header is inner layer which holds general logo and such and nav is outer

    ToDo:
        - Fix comments on #Nav Styling
        - make img look like banner by adding block to the top and a stick that attaches to it
        -- this can be the underline, but needs aspects that makes it look like a stick.
        --- Either somehow trace the image (transparent color inverted image, mby) of a stick or use fill or a font
        -  Add mask/texture to the black background to add some depth. Use "dirt.jpg"
*/
body {
    position: relative;
}
:root {
    --header-outer-height: 300px;
    --header-inner-height: 185px;
    --header-height-difference: calc(
            var(--header-outer-height) - var(--header-inner-height)
    );

    /*
        Page color distinctions for color awareness in relation to each other.
        The amount of distinctions should also match --page-count.
    */
    --page-1-distinction: #000fff; /* Home page */
    --page-1-distinction-rgb: 0, 15, 255;
    --page-2-distinction: #00ff55; /* Accessibility page */
    --page-2-distinction-rgb: 0, 255, 85;
    --page-3-distinction: #FFC300; /* Activity page */
    --page-3-distinction-rgb: 255, 195, 0;
    --page-4-distinction: #a84a00; /* Github page */
    --page-4-distinction-rgb: 168, 74, 0;

    /*
        Z-axis variables for depth effects.
        The amount of distinctions should also match --page-count.
    */
    --page-1-depth-axis: 1; /* Home page */
    --page-2-depth-axis: 2; /* Accessibility page */
    --page-3-depth-axis: 3; /* Activity page */
    --page-4-depth-axis: 4; /* Github page */

    /* NB some calculation of 90 deg / 2 between here and negative*/
}
/* inner header (the one that dissepears) that holds nav*/
.auxiliary-header {

    position: sticky;
    height: var(--header-outer-height);
    top: calc(var(--header-height-difference) * -1); /* space for nav + cutting off so that it acheives the paralax*/

    background-color: var(--primary-contrast-color); /* Fallback Color */

    background: url("../media/rock.jpg");
    background-repeat: repeat;
    background-size: auto;
    background-position: left top;


    border-radius: 0 0 85% 85% / 30%;
    display: flex;
    flex-direction: column;
    align-items: center;

    z-index: 10; /* above other created elements in main*/

}
/*outer header, which cuts off and acheives paralax*/
.main-header {
    position: sticky;
    height: var(--header-inner-height);
    top: 0;

    background-color: var(--primary-contrast-color); /* Fallback Color */
    width: 100%;

    border-radius: 0 0 85% 85% / 30%;

    display: flex;
    flex-direction: column;
    align-items: center;
}

.header-element {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    /* width: xxx; /* */

}
/* Wrapper class to keep center elements in the middle. Also for seperation of concerns.*/
.header-element-center-group {
    display: flex;
    flex-direction: row;
    align-items: center;
}
/* Logo + added auxilary items and styling */
.logo { /* .logo Class Styling Inside of .site-header */
    max-width: 100px;    /* Set the maximum width of the container */
    max-height: 100px;   /* Set the maximum height of the container */
    overflow: hidden;   /* Hide overflow if the image exceeds the container */
    border-radius: 0 0 85% 85% / 30%;
}
.logo img {
    width: 100%;       /* Image will scale within the container width */
    height: 100%;      /* Image will scale within the container height */

}
/*
    Styling for poles that are placed at start and end of header-element. Page 1, 2 and 4 does not have .pole
*/
.pole{
    height: var(--header-height-difference);
    transition: box-shadow 0.3s ease;
}
.auxiliary-header:has(#nav-3:checked) .pole {
    box-shadow: 0px 3px 1px -2px rgba(var(--page-3-distinction-rgb), 0.5);
}
.auxiliary-header:has(#nav-3:checked) .pole:hover { /* Could eventually make it navigate to the adjacent page, via js */
    box-shadow: 0px 8px 3px -3px rgba(var(--page-3-distinction-rgb), 0.8);
    transform: scale(1.015) translateY(-1px);
}



.site-current {
    display: flex;
    justify-content: center;

}
.site-current svg{
    width: 100%;
    height: 100%;
}
.arrow-left {
    padding: 10px;
}
.arrow-left svg {

}
.arrow-right {
    padding: 10px;
}
.arrow-right svg {
}



/* Navigation Bar*/
/*
    ToDo:
        - bookmark underline when it is in scroll down mode. when hovered, then make bookmark longer down. bookmark type mean that it is border at bottom
        -- could make this work by increasing margin? but how do I connect it to do so only when it is in scrolled down mode.
        -- bookmark style/object is button to go to top (button)
*/
:root {
    --underline-height: .5em; /* Animated underline height. Or rather, space needed from parent. */
    --transition-duration : .5s; /* Animated duration. */
    --page-count: 4; /* Total amount of page(s) in website. */
}
/* nav Styling */
.navbar {
    display: flex;
    flex-wrap: wrap;
    position: relative;
    height: calc(var(--header-height-difference) / 2); /* Specific height that accounts for paralax spacing of inner header (main-header)*/
    width: 100%;
    justify-content: center;


    padding-bottom: var(--underline-height); /* For underline */
    margin-bottom: 2em; /* For underline */
}
.nav-list {
    list-style: none;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between; /* Space items evenly across full width */
    width: 100%;
}
.nav-item { /* .nav-item Class Styling Inside of .nav-list */
    text-align: center;
    width: 100%;
    /* background-color: var(--primary-contrast-color); /**/
}
/* distinct and general styling for anchor tag*/
.nav-link { /* .nav-link Class Styling Inside of .nav-item */
    color: var(--primary-color);
    text-decoration: none;
    font-size: 1em;
    padding: 1em 0;
    transition: color 0.3s ease;
    font-family: 'Outfit', sans-serif;
}
.nav-item:hover .nav-link {
    color: lightcoral;
    transition: color 0.2s ease-in-out;
  /* background-color: #f0f0f0; /* hover background */
  /* border-radius: 4px; /**/
    animation: colorTransition 1.2s forwards;
}
@keyframes colorTransition {
    0% {
        color: lightcoral;
    }
    100% {
        color: var(--secondary-color);
    }
}

.nav-item:has(#nav-1:checked) .nav-link:hover{
    text-decoration-color: var(--page-1-distinction);
    text-decoration-thickness: 3px;
}
.nav-item:has(#nav-2:checked) .nav-link:hover{
    text-decoration-color: var(--page-2-distinction);
    text-decoration-thickness: 3px;
}
.nav-item:has(#nav-3:checked) .nav-link:hover{
    text-decoration-color: var(--page-3-distinction);
    text-decoration-thickness: 3px;
}
.nav-item:has(#nav-4:checked) .nav-link:hover{
    text-decoration-color: var(--page-4-distinction);
    text-decoration-thickness: 3px;
}
/*
    Underline animation goes "Opened" position to closed when hovered. On the way back, when it is no longer hovered,
    it will have a trailing effect depending on which page it is at (using dynamic so called logical operations and color awareness).
*/
/* Hiding of checkbox logic (logic for dynamic operations of the nav and other elements that are targeted) */
#nav-1,
#nav-2,
#nav-3,
#nav-4{
    opacity: 0;
    position: absolute;
    pointer-events: none;
}
/* Underline styling and animation */
.underline {
    position: relative;
    height: var(--underline-height);
    width: 100%;
    overflow: hidden;
    /* background: var(--primary-contrast-color) !important; /**/
    border-radius: 10px;
}
.color-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* ToDo: Have some Added padding, but then would also need to change alot of other elements/styling to accomodate for it.*/
    height: 100%;
    transition: transform var(--transition-duration) ease-in-out; /* ToDo:  Somehow activate the transition in reverse on page load. Might need to create a new element or wrap it.*/
}
.start-color {
    transition: transform calc(var(--transition-duration) * 1) ease-in-out;
}
.middle-color {
    transition: transform calc(var(--transition-duration) * 1.4) ease-in-out;
}
.end-color {
    transition: transform calc(var(--transition-duration) * 1.8) ease-in-out;
}
.nav-item:hover .nav-link + .underline .color-layer{
    transform: translateX(100%); /* Hover effect for the nav-link */
}
/* Underline distinct and general coloring */
.nav-item input:checked + label .underline .start-color{
    background-color: lightcoral ;
}
.nav-item:has(#nav-1:checked) .underline .middle-color{
    background-color: var(--page-1-distinction);
}
.nav-item:has(#nav-2:checked) .underline .middle-color{
    background-color: var(--page-2-distinction);
}
.nav-item:has(#nav-3:checked) .underline .middle-color{
    background-color: var(--page-3-distinction);
}
.nav-item:has(#nav-4:checked) .underline .middle-color{
    background-color: var(--page-4-distinction);
}
.nav-item input:checked + label .underline .end-color{
    background-color: var(--secondary-color);
}
/* Default coloring of other underline locations other than current one */
#nav-1:not(:checked) + label .underline,
#nav-2:not(:checked) + label .underline,
#nav-3:not(:checked) + label .underline,
#nav-4:not(:checked) + label .underline {
    /* background: var(--primary-contrast-color); /**/
}